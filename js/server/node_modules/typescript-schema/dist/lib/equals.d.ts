import * as m from './model';
export declare function createEquals<M extends m.ModelElement>(specificEquals: (m: M) => boolean): (m: m.ModelElement) => any;
export declare function createTypeEquals<M extends m.Type>(specificEquals: (m: M) => boolean): (m: m.ModelElement) => any;
export declare function createExpressionEquals<M extends m.Expression>(specificEquals: (m: M) => boolean): any;
export declare const typeContainerEquals: (m: m.ModelElement) => any;
export declare const classConstructorEquals: (m: m.ModelElement) => any;
export declare const interfaceConstructorEquals: (m: m.ModelElement) => any;
export declare const classEquals: (m: m.ModelElement) => any;
export declare const interfaceEquals: (m: m.ModelElement) => any;
export declare const typeParameterEquals: (m: m.ModelElement) => any;
export declare const compositeTypeEquals: (m: m.ModelElement) => any;
export declare const indexEquals: (m: m.ModelElement) => any;
export declare const memberEquals: (m: m.ModelElement) => any;
export declare const valueEquals: (m: m.ModelElement) => any;
export declare const enumMemberEquals: (m: m.ModelElement) => any;
export declare const enumEquals: (m: m.ModelElement) => any;
export declare const typeAliasEquals: (m: m.ModelElement) => any;
export declare const primitiveTypeEquals: (m: m.ModelElement) => any;
export declare const decoratorTypeEquals: (m: m.ModelElement) => boolean;
export declare const functionTypeEquals: (m: m.ModelElement) => any;
export declare const parameterEquals: (m: m.ModelElement) => any;
export declare const tupleTypeEquals: (m: m.ModelElement) => any;
export declare const unionTypeEquals: (m: m.ModelElement) => any;
export declare const typeQueryEquals: (m: m.ModelElement) => any;
export declare const literalExpressionEquals: any;
export declare const arrayExpressionEquals: any;
export declare const objectExpressionEquals: any;
export declare const classExpressionEquals: any;
export declare const complexExpressionEquals: any;
export declare const enumExpressionEquals: any;
export declare const decoratorEquals: (m: m.ModelElement) => any;
