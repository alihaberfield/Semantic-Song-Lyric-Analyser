var m = require('./model');
function arrayExpressionToLiteral(arrayExpression) {
    return arrayExpression.elements.map(function (expression) {
        return expressionToLiteral(expression);
    });
}
function objectExpressionToLiteral(objectExpression) {
    var obj = {};
    Object.keys(objectExpression.properties).forEach(function (property) {
        obj[property] = expressionToLiteral(objectExpression.properties[property]);
    });
    return obj;
}
function expressionToLiteral(expression) {
    switch (expression.expressionKind) {
        case m.ExpressionKind.STRING:
        case m.ExpressionKind.BOOLEAN:
        case m.ExpressionKind.NUMBER:
            return expression.value;
        case m.ExpressionKind.CLASS:
            var clsExpression = expression;
            return clsExpression.class;
        case m.ExpressionKind.ARRAY:
            return arrayExpressionToLiteral(expression);
        case m.ExpressionKind.OBJECT:
            return objectExpressionToLiteral(expression);
    }
}
exports.expressionToLiteral = expressionToLiteral;
//# sourceMappingURL=expressionToLiteral.js.map